angular:
1.bindings 
*string interpolation
*class binding
*style binding
*property binding 
*event binding
*two way binding.
2.buit-in-pipes
3.custom pipes
4.directives
*nglf
*ngfor
*ngswitch
5.parent to child components
6.child to parent

angular :-- Angular is a popular open-source framework for building web applications. It is developed and maintained by Google. Angular allows developers to build dynamic, 
            single-page applications (SPAs) and provides a structured approach to application development.

build with angular :-- E-commerce Websites,mobile application, Enterprise Applications,Single-Page Applications (SPAs).

binding:-- In Angular, bindings are a way to establish communication between components, allowing them to share data and interact with each other.

string interpolation:-- its one way data blinding ,allows to blind data from typscriopt file (mode ) to html 
                       [model/tsfile]---->[dom/html]
---> export class AppComponent 
     {
     city:string = "hyd";
     }
-->export class AppComponent {
  path:string ="..C:\Users\VINNU\Downloads.png";                     
}
html code --> <img src ={{path}} alt="no">
-->export class AppComponent {
  cname:string ="special aspecial"; 
  }
html code -->  <h1 class ={{cname}} > this is heading </h1>     
css code -->.special {
  border:3px solid green
}
.aspecial{
  background-color: blue  
}
-->export class AppComponent {                
   d:Date = new Date();
}
html code -->  <h1>{{d}}</h1>
-->export class AppComponent {
   d:string = new Date().toLocaleDateString();
}
--> test() {
     return 10; 
   }


property binding :--HTML element or a directive to a value or an expression.

export class AppComponent {                                                                                                                  
   isdisabled:boolean =false;
}

html code -->  name: <input type="text">   <button [disabled] =isdisabled>submit </button>


class binding:-- its aloows add or remove CSS classes to an element 
code:
export class AppComponent {
   isactive:boolean =false;
}

html code -->   <h1 [class]="isactive?'active':'inactive'"> this is the headline </h1>

css code -->    .active{
  background-color: blue ;
  color: white;
}
.inactive{
  background-color: gray ;
  color: white;
}

style blinding :--set inline styles on HTML elements dynamically. You can bind to individual style properties.
<h1 [style.color]="color : red ">text</h1>.

event blinding :--HTML events (e.g., click, change) to methods in your component class. ,mouse,keyboard.

pipes :--Pipes can be used to perform various operations such as filtering, sorting, formatting dates, numbers

built-in-pipes:-
1.current pipe--salary,money
2.date pipe--dob,dates 
3.decimal pipe --
4.json--it convert to string 
5.lower case--lowerletter
6.upper case --upper lette
7.percent --num /percent
8.slice--it 
9.async--


--->directives:-

===> export class AppComponent {
 show="true"
}

html code -->   <h1 *ngIf="show">this is header </h1>
